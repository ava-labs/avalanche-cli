name: E2E Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  e2e_test:
    name: e2e tests
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        suite:
          [
            "\\[APM\\]",
            "\\[Error handling\\]",
            "\\[Key\\]",
            "\\[Network\\]",
            "\\[Package Management\\]",
            "\\[Root\\]",
            "\\[Local Subnet non SOV\\]",
            "\\[Subnet Compatibility\\]",
            "\\[Public Subnet non SOV\\]",
            "\\[Etna Subnet SOV\\]",
            "\\[Etna AddRemove Validator SOV PoA\\]",
            "\\[Etna AddRemove Validator SOV PoS\\]",
            "\\[Etna Add Validator SOV Local\\]",
            "\\[Subnet\\]",
            "\\[Upgrade expect network failure\\]",
            "\\[Upgrade public network\\]",
            "\\[Upgrade local network\\]",
            "\\[Node create\\]",
            "\\[Node devnet\\]",
            "\\[Docker\\]",
          ]
        os: [ubuntu-24.04, macos-14]
        exclude:
          - os: ubuntu-24.04
            suite: "\\[Etna Subnet SOV\\]"
          - os: macos-14
            suite: "\\[Node create\\]"
          - os: macos-14
            suite: "\\[Node devnet\\]"
          - os: macos-14
            suite: "\\[Docker\\]"
          - os: macos-14
            suite: "\\[Public Subnet non SOV\\]"
          - os: ubuntu-24.04
            suite: "\\[Etna AddRemove Validator SOV PoA\\]"
          - os: ubuntu-24.04
            suite: "\\[Etna AddRemove Validator SOV PoS\\]"
          - os: ubuntu-24.04
            suite: "\\[Etna Add Validator SOV Local\\]"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install MacOSX dependencies
        if: ${{ matrix.os == 'macos-14' }}
        run: brew install python-setuptools

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Yarn Install
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_on: error
          command: yarn --cwd ./tests/e2e/hardhat

      - name: Install Typescript
        shell: bash
        run: |
          npm install -g typescript
          npm install -g ts-node
          npm install -g tsx

      - name: Install Docker on MacOS
        if: ${{ (matrix.os == 'macos-14') && (matrix.suite == '\\[Public Subnet non SOV\\]') }}
        run: |
          brew install docker
          brew install colima
          colima start --vm-type vz
          sudo ln -s ~/.colima/default/docker.sock /var/run/docker.sock

      - name: Generate SSH token for E2E tests
        run: |
          mkdir -p ~/.ssh && ssh-keygen -b 2048 -t rsa -f ~/.ssh/runner-avalanche-cli-keypair -q -N ""
          echo "E2E_SSH_PUB_KEY<<EOF" >> $GITHUB_ENV
          cat ~/.ssh/runner-avalanche-cli-keypair >> $GITHUB_ENV 
          echo "EOF" >> $GITHUB_ENV

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ env.E2E_SSH_PUB_KEY }}   

      - name: Run E2E tests
        shell: bash
        run: AVALANCHE_CLI_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} LEDGER_SIM=true scripts/run.e2e.sh --filter "${{ matrix.suite }}"
      
      - name: Generate timestamp and sanitize matrix.suite
        if: always()
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          CLEAN_SUITE=$(echo "${MATRIX_SUITE}" | sed 's/[^a-zA-Z0-9]/_/g')
          echo "SUITE=${CLEAN_SUITE}" >> $GITHUB_ENV
          echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
        env:
          MATRIX_SUITE: ${{ matrix.suite }}

      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cli-logs-${{ matrix.os }}-${{ env.SUITE }}-${{ env.TIMESTAMP }}
          include-hidden-files: true
          path: |
            ~/.avalanche-cli/
            !~/.avalanche-cli/bin/
            !~/.avalanche-cli/snapshots
          retention-days: 5
